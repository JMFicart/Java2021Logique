debut diagonalestableaucarre
    variables locales
        var taille :n <- ...
        var tab :n [taille, taille]
        var i :n <- 1
        var j :n <- 1
    fin variables locales

    // ex 9.1

    pour i allant de 1 a taille par pas de 1
        tab[i, i] <- 1
        j <- taille - i + 1
        tab[j, i] <- 2
    i suivant

fin diagonalestableaucarre


debut copietableau1
    variables locales
        var taille :n <- ...
        var tab1 :n [taille, taille]
        var tab2 :n [taille * taille]
        var i :n <- 1
        var j :n <- 1
        var k :n <- 1
    fin variables locales

    // ex 9.2.1

    pour i allant de 1 a taille par pas de 1
        pour j allant de 1 a taille par pas de 1
            tab2[k] <- tab1[i, j]
            k <- k + 1
        j suivant
    i suivant

fin copietableau1


debut copietableau2
    variables locales
        var taille :n <- ...
        var tab1 :n [taille, taille]
        var tab2 :n [taille * taille]
        var i :n <- 1
        var j :n <- 1
    fin variables locales

    // ex 9.2.2

    pour i allant de 1 a taille par pas de 1
        pour j allant de 1 a taille par pas de 1
            tab2[((i - 1) * taille) + j] <- tab1[i, j]
        j suivant
    i suivant

fin copietableau2


debut copietableau3
    variables locales
        var taille :n <- ...
        var tab1 :n [taille, taille]
        var tab2 :n [taille * taille]
        var i :n <- 1
        var ligne :n <- 1
        var colonne :n <- 1
    fin variables locales

    // ex 9.2.3

    pour i allant de 1 a taille * taille par pas de 1
        si i mod taille = 0
            alors
                ligne <- i div taille
                colonne <- taille
            sinon
                ligne <- (i div taille) + 1
                colonne <- i mod taille
        fin si

        tab2[i] <- tab1[ligne, colonne]
    i suivant

fin copietableau3


debut moyenneminmax
    variables locales
        var nbrelignes :n <- ...
        var nbrecolonnes :n <- ...
        var tab :n [nbrelignes, nbrecolonnes]
        var i :n <- 1
        var j :n <- 1
        var vmin :n <- -1
        var vmax :n <- -1
        var moyenne :n <- 0
    fin variables locales

    // ex 9.3

    pour i allant de 1 a nbrelignes par pas de 1
        pour j allant de 1 a nbrecolonnes par pas de 1
            si j = 1
                alors
                    vmin <- tab[i, j]
                    vmax <- tab[i, j]
                    moyenne <- tab[i, j]
                sinon
                    si tab[i, j] < vmin
                        alors
                            vmin <- tab[i, j]
                        sinon
                            si tab[i, j] > vmax
                                alors
                                    vmax <- tab[i, j]
                            fin si
                    fin si
                    moyenne <- moyenne + tab[i, j]
            fin si
        j suivant

        afficher "Moyenne de la ligne ", i, " = ", moyenne / nbrecolonnes
        afficher "Minimum de la ligne ", i, " = ", vmin
        afficher "Maximum de la ligne ", i, " = ", vmax
    i suivant

fin moyenneminmax


debut carremagique
    variables locales
        var taille :n <- ...
        var tab :n [taille, taille]
        var sommeligne :n [taille]
        var sommecolonne :n [taille]
        var sommediag1 :n <- 0
        var sommediag2 :n <- 0
        var i :n <- 1
        var j :n <- 1
        var magique :b vrai
    fin variables locales

    // ex 9.4

    pour i allant de 1 a taille par pas de 1
        sommeligne[i] <- 0
        sommecolonne[i] <- 0
    i suivant

    pour i allant de 1 a taille par pas de 1
        pour j allant de 1 a taille par pas de 1
            sommeligne[i] <- sommeligne[i] + tab[i, j]
            sommecolonne[j] <- sommecolonne[j] + tab[i, j]
            si i = j
                alors
                    sommediag1 <- sommediag1 + tab[i, j]
                sinon
                    si j = taille - i + 1
                        alors
                            sommediag2 <- sommediag2 + tab[i, j]
                    fin si
            fin si
        j suivant
    i suivant

    si sommediag1 = sommediag2
        alors
            i <- 1
            tant que i <= taille - 1 et magique = vrai
                si sommeligne[i] != sommeligne[i + 1] ou sommecolonne[i] != sommecolonne[i + 1]
                    alors
                        magique <- faux
                fin si
                i <- i + 1
            fin tant que

            si magique = vrai
                alors
                    afficher "C'est un carré magique !"
                sinon
                    afficher "Pas un carré magique !"
            fin si
        sinon
            afficher "Pas un carré magique !"
    fin si
fin carremagique


debut rotationmatrice1
    variables locales
        var taille :n <- 3
        var tab1 :n [taille, taille]
        var tab2 :n [taille, taille]
        var ligne :n <- 1
        var colonne :n <- 1
    fin variables locales

    // ex 9.5.1

    pour ligne allant de 1 a taille par pas de 1
        cas ou ligne
            cas 1
                pour colonne allant de 1 a taille par pas de 1
                    tab2[colonne, taille] <- tab1[ligne, colonne]
                colonne suivant
            cas taille
                pour colonne allant de 1 a taille par pas de 1
                    tab2[colonne, 1] <- tab1[ligne, colonne]
                colonne suivant
            autre cas
                pour colonne allant de 1 a taille par pas de 1
                    tab2[colonne, 2] <- tab1[ligne, colonne]
                colonne suivant
        fin cas ou
    ligne suivant
fin rotationmatrice1


debut rotationmatrice2
    variables locales
        var taille :n <- 3
        var tab :n [taille, taille]
    fin variables locales

    // ex 9.5.2

    echange(1, 1, 1, 3, Tab)
    echange(1, 2, 2, 3, Tab)
    echange(1, 1, 3, 3, Tab)
    echange(2, 1, 3, 2, Tab)
    echange(1, 2, 3, 2, Tab)
    echange(1, 1, 3, 1, Tab)
fin rotationmatrice2

debut echange(in l1 :n, in c1 :n, in l2 :n, in c2 :n, in/out tab[])
    variables locales
        var echange :n <- 0
    fin variables locales

    // ex 9.5.2

    echange <- tab[l1, c1]
    tab[l1, c1] <- tab[l2, c2]
    tab[l2, c2] <- echange
fin echange


debut diagonaletableaurectangulaire
    variables locales
        var nbrelignes :n <- ...
        var nbrecolonnes :n <- ...
        var tab :n [nbrelignes, nbrecolonnes]
        var tiret :n <- 0
        var ligne :n <- 0
        var colonne :n <- 0
        var i :n <- 1
    fin variables locales

    // ex 9.6

    tiret <- int((nbrecolonnes / nbrelignes) + 0.99)
    colonne <- 1

    pour ligne allant de 1 a nbrelignes par pas de 1
        i <- 1
        tant que i <= tiret et colonne <= nbrecolonnes
            tab[ligne, colonne] <- 1
            colonne <- colonne + 1
            i <- i + 1
        fin tant que
    ligne suivant

fin diagonaletableaurectangulaire
